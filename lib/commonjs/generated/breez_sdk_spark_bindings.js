"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _breez_sdk_spark_bindingsFfi = _interopRequireDefault(require("./breez_sdk_spark_bindings-ffi.js"));
var _uniffiBindgenReactNative = require("uniffi-bindgen-react-native");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// This file was autogenerated by some hot garbage in the `uniffi-bindgen-react-native` crate.
// Trust me, you don't want to mess with it!

// Get converters from the other files, if any.
const uniffiCaller = new _uniffiBindgenReactNative.UniffiRustCaller();
const uniffiIsDebug =
// @ts-ignore -- The process global might not be defined
typeof process !== 'object' ||
// @ts-ignore -- The process global might not be defined
process?.env?.NODE_ENV !== 'production' || false;
// Public interface members begin here.

const stringConverter = {
  stringToBytes: s => uniffiCaller.rustCall(status => (0, _breez_sdk_spark_bindingsFfi.default)().ubrn_uniffi_internal_fn_func_ffi__string_to_arraybuffer(s, status)),
  bytesToString: ab => uniffiCaller.rustCall(status => (0, _breez_sdk_spark_bindingsFfi.default)().ubrn_uniffi_internal_fn_func_ffi__arraybuffer_to_string(ab, status)),
  stringByteLength: s => uniffiCaller.rustCall(status => (0, _breez_sdk_spark_bindingsFfi.default)().ubrn_uniffi_internal_fn_func_ffi__string_to_byte_length(s, status))
};
const FfiConverterString = (0, _uniffiBindgenReactNative.uniffiCreateFfiConverterString)(stringConverter);

/**
 * This should be called before anything else.
 *
 * It is likely that this is being done for you by the library's `index.ts`.
 *
 * It checks versions of uniffi between when the Rust scaffolding was generated
 * and when the bindings were generated.
 *
 * It also initializes the machinery to enable Rust to talk back to Javascript.
 */
function uniffiEnsureInitialized() {
  // Get the bindings contract version from our ComponentInterface
  const bindingsContractVersion = 26;
  // Get the scaffolding contract version by calling the into the dylib
  const scaffoldingContractVersion = (0, _breez_sdk_spark_bindingsFfi.default)().ubrn_ffi_breez_sdk_spark_bindings_uniffi_contract_version();
  if (bindingsContractVersion !== scaffoldingContractVersion) {
    throw new _uniffiBindgenReactNative.UniffiInternalError.ContractVersionMismatch(scaffoldingContractVersion, bindingsContractVersion);
  }
}
var _default = exports.default = Object.freeze({
  initialize: uniffiEnsureInitialized
});
//# sourceMappingURL=breez_sdk_spark_bindings.js.map