// This file was autogenerated by some hot garbage in the `uniffi-bindgen-react-native` crate.
// Trust me, you don't want to mess with it!

import {
  type StructuralEquality as UniffiStructuralEquality,
  type UniffiForeignFuture as RuntimeUniffiForeignFuture,
  type UniffiRustCallStatus,
  type UniffiRustArcPtr,
  type UniffiRustFutureContinuationCallback as RuntimeUniffiRustFutureContinuationCallback,
  type UniffiResult,
} from 'uniffi-bindgen-react-native';

interface NativeModuleInterface {
  ubrn_uniffi_internal_fn_func_ffi__string_to_byte_length(
    string: string,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_uniffi_internal_fn_func_ffi__string_to_arraybuffer(
    string: string,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_internal_fn_func_ffi__arraybuffer_to_string(
    buffer: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): string;
  ubrn_uniffi_breez_sdk_spark_fn_clone_bitcoinchainservice(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_free_bitcoinchainservice(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_method_bitcoinchainservice_get_address_utxos(
    ptr: bigint,
    address: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_bitcoinchainservice_get_transaction_status(
    ptr: bigint,
    txid: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_bitcoinchainservice_get_transaction_hex(
    ptr: bigint,
    txid: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_bitcoinchainservice_broadcast_transaction(
    ptr: bigint,
    tx: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_clone_breezsdk(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_free_breezsdk(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_add_event_listener(
    ptr: bigint,
    listener: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_check_lightning_address_available(
    ptr: bigint,
    req: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_claim_deposit(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_delete_lightning_address(
    ptr: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_disconnect(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_get_info(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_get_lightning_address(
    ptr: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_get_payment(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_list_fiat_currencies(
    ptr: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_list_fiat_rates(
    ptr: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_list_payments(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_list_unclaimed_deposits(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_lnurl_pay(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_poll_lightning_send_payment(
    ptr: bigint,
    payment: Uint8Array,
    sspId: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_prepare_lnurl_pay(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_prepare_send_payment(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_receive_payment(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_recover_lightning_address(
    ptr: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_refund_deposit(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_register_lightning_address(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_remove_event_listener(
    ptr: bigint,
    id: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_send_payment(
    ptr: bigint,
    request: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_send_payment_internal(
    ptr: bigint,
    request: Uint8Array,
    suppressPaymentEvent: number
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_breezsdk_sync_wallet(
    ptr: bigint,
    request: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_spark_fn_clone_sdkbuilder(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_free_sdkbuilder(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_constructor_sdkbuilder_new(
    config: Uint8Array,
    seed: Uint8Array,
    storage: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_sdkbuilder_build(ptr: bigint): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_sdkbuilder_with_chain_service(
    ptr: bigint,
    chainService: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_sdkbuilder_with_fiat_service(
    ptr: bigint,
    fiatService: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_sdkbuilder_with_key_set(
    ptr: bigint,
    keySetType: Uint8Array,
    useAddressIndex: number
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_sdkbuilder_with_lnurl_client(
    ptr: bigint,
    lnurlClient: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_sdkbuilder_with_rest_chain_service(
    ptr: bigint,
    url: Uint8Array,
    credentials: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_clone_storage(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_free_storage(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_delete_cached_item(
    ptr: bigint,
    key: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_get_cached_item(
    ptr: bigint,
    key: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_set_cached_item(
    ptr: bigint,
    key: Uint8Array,
    value: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_list_payments(
    ptr: bigint,
    offset: Uint8Array,
    limit: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_insert_payment(
    ptr: bigint,
    payment: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_set_payment_metadata(
    ptr: bigint,
    paymentId: Uint8Array,
    metadata: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_get_payment_by_id(
    ptr: bigint,
    id: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_add_deposit(
    ptr: bigint,
    txid: Uint8Array,
    vout: number,
    amountSats: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_delete_deposit(
    ptr: bigint,
    txid: Uint8Array,
    vout: number
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_list_deposits(
    ptr: bigint
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_method_storage_update_deposit(
    ptr: bigint,
    txid: Uint8Array,
    vout: number,
    payload: Uint8Array
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_func_connect(request: Uint8Array): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_func_default_config(
    network: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_spark_fn_func_default_storage(
    dataDir: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_spark_fn_func_init_logging(
    logDir: Uint8Array,
    appLogger: Uint8Array,
    logFilter: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_func_parse(input: Uint8Array): bigint;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_u8(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_u8(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_u8(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_u8(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_i8(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_i8(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_i8(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_i8(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_u16(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_u16(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_u16(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_u16(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_i16(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_i16(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_i16(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_i16(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_u32(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_u32(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_u32(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_u32(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_i32(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_i32(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_i32(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_i32(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_u64(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_u64(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_u64(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_u64(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_i64(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_i64(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_i64(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_i64(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_f32(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_f32(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_f32(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_f32(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_f64(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_f64(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_f64(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_f64(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_pointer(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_pointer(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_pointer(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_pointer(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_rust_buffer(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_rust_buffer(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_rust_buffer(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_rust_buffer(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_ffi_breez_sdk_spark_rust_future_poll_void(
    handle: bigint,
    callback: UniffiRustFutureContinuationCallback,
    callbackData: bigint
  ): void;
  ubrn_ffi_breez_sdk_spark_rust_future_cancel_void(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_free_void(handle: bigint): void;
  ubrn_ffi_breez_sdk_spark_rust_future_complete_void(
    handle: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_spark_checksum_func_connect(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_func_default_config(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_func_default_storage(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_func_init_logging(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_func_parse(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_bitcoinchainservice_get_address_utxos(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_bitcoinchainservice_get_transaction_status(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_bitcoinchainservice_get_transaction_hex(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_bitcoinchainservice_broadcast_transaction(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_add_event_listener(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_check_lightning_address_available(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_claim_deposit(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_delete_lightning_address(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_disconnect(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_get_info(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_get_lightning_address(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_get_payment(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_list_fiat_currencies(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_list_fiat_rates(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_list_payments(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_list_unclaimed_deposits(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_lnurl_pay(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_poll_lightning_send_payment(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_prepare_lnurl_pay(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_prepare_send_payment(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_receive_payment(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_recover_lightning_address(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_refund_deposit(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_register_lightning_address(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_remove_event_listener(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_send_payment(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_send_payment_internal(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_breezsdk_sync_wallet(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_sdkbuilder_build(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_sdkbuilder_with_chain_service(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_sdkbuilder_with_fiat_service(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_sdkbuilder_with_key_set(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_sdkbuilder_with_lnurl_client(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_sdkbuilder_with_rest_chain_service(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_delete_cached_item(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_get_cached_item(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_set_cached_item(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_list_payments(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_insert_payment(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_set_payment_metadata(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_get_payment_by_id(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_add_deposit(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_delete_deposit(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_list_deposits(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_storage_update_deposit(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_constructor_sdkbuilder_new(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_eventlistener_on_event(): number;
  ubrn_uniffi_breez_sdk_spark_checksum_method_logger_log(): number;
  ubrn_ffi_breez_sdk_spark_uniffi_contract_version(): number;
  ubrn_uniffi_breez_sdk_spark_fn_init_callback_vtable_eventlistener(
    vtable: UniffiVTableCallbackInterfaceEventListener
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_init_callback_vtable_logger(
    vtable: UniffiVTableCallbackInterfaceLogger
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_init_callback_vtable_bitcoinchainservice(
    vtable: UniffiVTableCallbackInterfaceBitcoinChainService
  ): void;
  ubrn_uniffi_breez_sdk_spark_fn_init_callback_vtable_storage(
    vtable: UniffiVTableCallbackInterfaceStorage
  ): void;
  ubrn_uniffi_internal_fn_method_bitcoinchainservice_ffi__bless_pointer(
    pointer: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): UniffiRustArcPtr;
  ubrn_uniffi_internal_fn_method_breezsdk_ffi__bless_pointer(
    pointer: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): UniffiRustArcPtr;
  ubrn_uniffi_internal_fn_method_sdkbuilder_ffi__bless_pointer(
    pointer: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): UniffiRustArcPtr;
  ubrn_uniffi_internal_fn_method_storage_ffi__bless_pointer(
    pointer: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): UniffiRustArcPtr;
}

// Casting globalThis to any allows us to look for `NativeBreezSdkSpark`
// if it was added via JSI.
//
// We use a getter here rather than simply `globalThis.NativeBreezSdkSpark` so that
// if/when the startup sequence isn't just so, an empty value isn't inadvertantly cached.
const getter: () => NativeModuleInterface = () =>
  (globalThis as any).NativeBreezSdkSpark;
export default getter;

// Structs and function types for calling back into Typescript from Rust.
export type UniffiRustFutureContinuationCallback = (
  data: bigint,
  pollResult: number
) => void;
type UniffiForeignFutureFree = (handle: bigint) => void;
type UniffiCallbackInterfaceFree = (handle: bigint) => void;
export type UniffiForeignFuture = {
  handle: bigint;
  free: UniffiForeignFutureFree;
};
export type UniffiForeignFutureStructU8 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU8 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructU8
) => void;
export type UniffiForeignFutureStructI8 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI8 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructI8
) => void;
export type UniffiForeignFutureStructU16 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU16 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructU16
) => void;
export type UniffiForeignFutureStructI16 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI16 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructI16
) => void;
export type UniffiForeignFutureStructU32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU32 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructU32
) => void;
export type UniffiForeignFutureStructI32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI32 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructI32
) => void;
export type UniffiForeignFutureStructU64 = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU64 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructU64
) => void;
export type UniffiForeignFutureStructI64 = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI64 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructI64
) => void;
export type UniffiForeignFutureStructF32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteF32 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructF32
) => void;
export type UniffiForeignFutureStructF64 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteF64 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructF64
) => void;
export type UniffiForeignFutureStructPointer = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompletePointer = (
  callbackData: bigint,
  result: UniffiForeignFutureStructPointer
) => void;
export type UniffiForeignFutureStructRustBuffer = {
  returnValue: Uint8Array;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteRustBuffer = (
  callbackData: bigint,
  result: UniffiForeignFutureStructRustBuffer
) => void;
export type UniffiForeignFutureStructVoid = {
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteVoid = (
  callbackData: bigint,
  result: UniffiForeignFutureStructVoid
) => void;
type UniffiCallbackInterfaceEventListenerMethod0 = (
  uniffiHandle: bigint,
  event: Uint8Array
) => UniffiResult<void>;
type UniffiCallbackInterfaceLoggerMethod0 = (
  uniffiHandle: bigint,
  l: Uint8Array
) => UniffiResult<void>;
type UniffiCallbackInterfaceBitcoinChainServiceMethod0 = (
  uniffiHandle: bigint,
  address: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteRustBuffer,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceBitcoinChainServiceMethod1 = (
  uniffiHandle: bigint,
  txid: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteRustBuffer,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceBitcoinChainServiceMethod2 = (
  uniffiHandle: bigint,
  txid: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteRustBuffer,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceBitcoinChainServiceMethod3 = (
  uniffiHandle: bigint,
  tx: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteVoid,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod0 = (
  uniffiHandle: bigint,
  key: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteVoid,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod1 = (
  uniffiHandle: bigint,
  key: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteRustBuffer,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod2 = (
  uniffiHandle: bigint,
  key: Uint8Array,
  value: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteVoid,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod3 = (
  uniffiHandle: bigint,
  offset: Uint8Array,
  limit: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteRustBuffer,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod4 = (
  uniffiHandle: bigint,
  payment: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteVoid,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod5 = (
  uniffiHandle: bigint,
  paymentId: Uint8Array,
  metadata: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteVoid,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod6 = (
  uniffiHandle: bigint,
  id: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteRustBuffer,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod7 = (
  uniffiHandle: bigint,
  txid: Uint8Array,
  vout: number,
  amountSats: bigint,
  uniffiFutureCallback: UniffiForeignFutureCompleteVoid,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod8 = (
  uniffiHandle: bigint,
  txid: Uint8Array,
  vout: number,
  uniffiFutureCallback: UniffiForeignFutureCompleteVoid,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod9 = (
  uniffiHandle: bigint,
  uniffiFutureCallback: UniffiForeignFutureCompleteRustBuffer,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
type UniffiCallbackInterfaceStorageMethod10 = (
  uniffiHandle: bigint,
  txid: Uint8Array,
  vout: number,
  payload: Uint8Array,
  uniffiFutureCallback: UniffiForeignFutureCompleteVoid,
  uniffiCallbackData: bigint
) => UniffiResult<UniffiForeignFuture>;
export type UniffiVTableCallbackInterfaceEventListener = {
  onEvent: UniffiCallbackInterfaceEventListenerMethod0;
  uniffiFree: UniffiCallbackInterfaceFree;
};
export type UniffiVTableCallbackInterfaceLogger = {
  log: UniffiCallbackInterfaceLoggerMethod0;
  uniffiFree: UniffiCallbackInterfaceFree;
};
export type UniffiVTableCallbackInterfaceBitcoinChainService = {
  getAddressUtxos: UniffiCallbackInterfaceBitcoinChainServiceMethod0;
  getTransactionStatus: UniffiCallbackInterfaceBitcoinChainServiceMethod1;
  getTransactionHex: UniffiCallbackInterfaceBitcoinChainServiceMethod2;
  broadcastTransaction: UniffiCallbackInterfaceBitcoinChainServiceMethod3;
  uniffiFree: UniffiCallbackInterfaceFree;
};
export type UniffiVTableCallbackInterfaceStorage = {
  deleteCachedItem: UniffiCallbackInterfaceStorageMethod0;
  getCachedItem: UniffiCallbackInterfaceStorageMethod1;
  setCachedItem: UniffiCallbackInterfaceStorageMethod2;
  listPayments: UniffiCallbackInterfaceStorageMethod3;
  insertPayment: UniffiCallbackInterfaceStorageMethod4;
  setPaymentMetadata: UniffiCallbackInterfaceStorageMethod5;
  getPaymentById: UniffiCallbackInterfaceStorageMethod6;
  addDeposit: UniffiCallbackInterfaceStorageMethod7;
  deleteDeposit: UniffiCallbackInterfaceStorageMethod8;
  listDeposits: UniffiCallbackInterfaceStorageMethod9;
  updateDeposit: UniffiCallbackInterfaceStorageMethod10;
  uniffiFree: UniffiCallbackInterfaceFree;
};

// UniffiRustFutureContinuationCallback is generated as part of the component interface's
// ffi_definitions. However, we need it in the runtime.
// We could:
// (a) do some complicated template logic to ensure the declaration is not generated here (possible)
// (b) import the generated declaration into the runtime (m a y b e) or…
// (c) generate the declaration anyway, and use a different declaration in the runtime.
//
// We chose (c) here as the simplest. In addition, we perform a compile time check that
// the two versions of `UniffiRustFutureContinuationCallback` are structurally equivalent.
//
// If you see the error:
// ```
// Type 'true' is not assignable to type 'false'.(2322)
// ```
// Then a new version of uniffi has changed the signature of the callback. Most likely, code in
// `typescript/src/async-rust-call.ts` will need to be changed.
//
// If you see the error:
// ```
// Cannot find name 'UniffiRustFutureContinuationCallback'. Did you mean 'RuntimeUniffiRustFutureContinuationCallback'?(2552)
// ```
// then you may not be using callbacks or promises, and uniffi is now not generating Futures and callbacks.
// You should not generate this if that is the case.
//
// ('You' being the bindings generator maintainer).
const isRustFutureContinuationCallbackTypeCompatible: UniffiStructuralEquality<
  RuntimeUniffiRustFutureContinuationCallback,
  UniffiRustFutureContinuationCallback
> = true;
const isUniffiForeignFutureTypeCompatible: UniffiStructuralEquality<
  RuntimeUniffiForeignFuture,
  UniffiForeignFuture
> = true;
